<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="4" skipped="0" tests="5" time="37.844" timestamp="2022-11-20T22:32:38.478797" hostname="xiaoma"><testcase classname="test.test_web.test_login.Test_Login" name="test_01_login[xiaoma@126.com-123456-\u767b\u51fa]" time="7.554" /><testcase classname="test.test_web.test_login.Test_Login" name="test_02_login[xiaomazz@126.com-123456-\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef]" time="7.518"><failure message="assert 0">self = &lt;test.test_web.test_login.Test_Login object at 0x000001DDFE5C6A60&gt;
username = 'xiaomazz@126.com', password = 123456, expected = '用户名或密码错误'

    @pytest.mark.parametrize("username, password, expected",
                             testcase["c_example"])
    def test_02_login(self, username, password, expected):
        self.home_proxy.to_login()
        time.sleep(2)
        self.login_proxy.enter(username, password)
        time.sleep(2)
        loginErr_text = self.login_proxy.get_loginErr()
        assert loginErr_text == expected
&gt;       assert 0
E       assert 0

test\test_web\test_login.py:50: AssertionError</failure></testcase><testcase classname="test.test_web.test_login.Test_Login" name="test_02_login[-123456-\u8bf7\u586b\u5199\u7528\u6237\u540d\u548c\u5bc6\u7801]" time="7.486"><failure message="assert 0">self = &lt;test.test_web.test_login.Test_Login object at 0x000001DDFE5C6AF0&gt;
username = '', password = 123456, expected = '请填写用户名和密码'

    @pytest.mark.parametrize("username, password, expected",
                             testcase["c_example"])
    def test_02_login(self, username, password, expected):
        self.home_proxy.to_login()
        time.sleep(2)
        self.login_proxy.enter(username, password)
        time.sleep(2)
        loginErr_text = self.login_proxy.get_loginErr()
        assert loginErr_text == expected
&gt;       assert 0
E       assert 0

test\test_web\test_login.py:50: AssertionError</failure></testcase><testcase classname="test.test_web.test_login.Test_Login" name="test_02_login[xiaoma@126.com--\u8bf7\u586b\u5199\u7528\u6237\u540d\u548c\u5bc6\u7801]" time="7.496"><failure message="assert 0">self = &lt;test.test_web.test_login.Test_Login object at 0x000001DDFE5C6B80&gt;
username = 'xiaoma@126.com', password = '', expected = '请填写用户名和密码'

    @pytest.mark.parametrize("username, password, expected",
                             testcase["c_example"])
    def test_02_login(self, username, password, expected):
        self.home_proxy.to_login()
        time.sleep(2)
        self.login_proxy.enter(username, password)
        time.sleep(2)
        loginErr_text = self.login_proxy.get_loginErr()
        assert loginErr_text == expected
&gt;       assert 0
E       assert 0

test\test_web\test_login.py:50: AssertionError</failure></testcase><testcase classname="test.test_web.test_login.Test_Login" name="test_02_login[xiaoma@126.com-12345678-\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef]" time="7.485"><failure message="assert 0">self = &lt;test.test_web.test_login.Test_Login object at 0x000001DDFE5C6C10&gt;
username = 'xiaoma@126.com', password = 12345678, expected = '用户名或密码错误'

    @pytest.mark.parametrize("username, password, expected",
                             testcase["c_example"])
    def test_02_login(self, username, password, expected):
        self.home_proxy.to_login()
        time.sleep(2)
        self.login_proxy.enter(username, password)
        time.sleep(2)
        loginErr_text = self.login_proxy.get_loginErr()
        assert loginErr_text == expected
&gt;       assert 0
E       assert 0

test\test_web\test_login.py:50: AssertionError</failure></testcase></testsuite></testsuites>
<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="18" time="125.181" timestamp="2022-11-23T19:22:42.848032" hostname="xiaoma"><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_case01_enroll[1915856663@qq.com-liaoyudong-123456-123456-1234-输入您收到邮件中的验证码：-欢迎加入当当网]" time="21.602"><failure message="selenium.common.exceptions.TimeoutException: Message: &#10;Stacktrace:&#10;Backtrace:&#10;&#09;Ordinal0 [0x00771ED3+2236115]&#10;&#09;Ordinal0 [0x007092F1+1807089]&#10;&#09;Ordinal0 [0x006166FD+812797]&#10;&#09;Ordinal0 [0x006455DF+1005023]&#10;&#09;Ordinal0 [0x006457CB+1005515]&#10;&#09;Ordinal0 [0x00677632+1209906]&#10;&#09;Ordinal0 [0x00661AD4+1120980]&#10;&#09;Ordinal0 [0x006759E2+1202658]&#10;&#09;Ordinal0 [0x006618A6+1120422]&#10;&#09;Ordinal0 [0x0063A73D+960317]&#10;&#09;Ordinal0 [0x0063B71F+964383]&#10;&#09;GetHandleVerifier [0x00A1E7E2+2743074]&#10;&#09;GetHandleVerifier [0x00A108D4+2685972]&#10;&#09;GetHandleVerifier [0x00802BAA+532202]&#10;&#09;GetHandleVerifier [0x00801990+527568]&#10;&#09;Ordinal0 [0x0071080C+1837068]&#10;&#09;Ordinal0 [0x00714CD8+1854680]&#10;&#09;Ordinal0 [0x00714DC5+1854917]&#10;&#09;Ordinal0 [0x0071ED64+1895780]&#10;&#09;BaseThreadInitThunk [0x75FE6939+25]&#10;&#09;RtlGetFullPathName_UEx [0x77578FD2+1218]&#10;&#09;RtlGetFullPathName_UEx [0x77578F9D+1165]">self = &lt;test.test_web.test_enroll.TestEnroll object at 0x0000015C83D6A730&gt;
email = '1915856663@qq.com', nikename = 'liaoyudong', pwd = 123456
repwd = 123456, check_code = 1234, expected1 = '输入您收到邮件中的验证码：'
expected2 = '欢迎加入当当网'

    @pytest.mark.parametrize("email,nikename,pwd,repwd,check_code,expected1,expected2",
                             case_data['p_example'])
    def test_case01_enroll(self, email, nikename, pwd, repwd,
                           check_code, expected1, expected2):
        logger.info([email, nikename, pwd, repwd, check_code, expected1, expected2])
        self.home_proxy.to_enroll()
        self.enrool_proxy.enroll_user(email, nikename, pwd, repwd, str(check_code)+"\n")
        time.sleep(2)
        #点击注册按钮
        self.enrool_proxy.click_enroll()
        time.sleep(2)
        self.enrool_proxy.click_enroll()
        time.sleep(2)
&gt;       assert self.enrool_proxy.get_write_in() == expected1

test\test_web\test_enroll.py:49: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
page\enroll_page.py:126: in get_write_in
    return self.enroll_handle.get_write_in_info()
page\enroll_page.py:85: in get_write_in_info
    return self.get_text(self.enroll_page.find_write_in_info())
page\enroll_page.py:34: in find_write_in_info
    return self.get_element(*self.write_in_info)
base\web\base.py:25: in get_element
    element = wait.until(lambda x: x.find_element(*location))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="a924c2ba38b052442c801b27fdf21708")&gt;
method = &lt;function BasePage.get_element.&lt;locals&gt;.&lt;lambda&gt; at 0x0000015C83DEC9D0&gt;
message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except InvalidSelectorException as e:
                raise e
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.monotonic() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       Backtrace:
E       	Ordinal0 [0x00771ED3+2236115]
E       	Ordinal0 [0x007092F1+1807089]
E       	Ordinal0 [0x006166FD+812797]
E       	Ordinal0 [0x006455DF+1005023]
E       	Ordinal0 [0x006457CB+1005515]
E       	Ordinal0 [0x00677632+1209906]
E       	Ordinal0 [0x00661AD4+1120980]
E       	Ordinal0 [0x006759E2+1202658]
E       	Ordinal0 [0x006618A6+1120422]
E       	Ordinal0 [0x0063A73D+960317]
E       	Ordinal0 [0x0063B71F+964383]
E       	GetHandleVerifier [0x00A1E7E2+2743074]
E       	GetHandleVerifier [0x00A108D4+2685972]
E       	GetHandleVerifier [0x00802BAA+532202]
E       	GetHandleVerifier [0x00801990+527568]
E       	Ordinal0 [0x0071080C+1837068]
E       	Ordinal0 [0x00714CD8+1854680]
E       	Ordinal0 [0x00714DC5+1854917]
E       	Ordinal0 [0x0071ED64+1895780]
E       	BaseThreadInitThunk [0x75FE6939+25]
E       	RtlGetFullPathName_UEx [0x77578FD2+1218]
E       	RtlGetFullPathName_UEx [0x77578F9D+1165]

C:\Python\Python38\lib\site-packages\selenium\webdriver\support\wait.py:89: TimeoutException</failure></testcase><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_email_err_enroll[-liaoyudong-123456-123456-1234-Email不能为空]" time="5.518" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_email_err_enroll[xiaoma@126.com-liaoyudong-123456-123456-1234-Email已存在]" time="5.496" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_email_err_enroll[xiaoma-liaoyudong-123456-123456-1234-Email格式不正确]" time="5.505" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_email_err_enroll[@#@-liaoyudong-123456-123456-1234-Email格式不正确]" time="5.503" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_nikename_err_enroll[1915856663@qq.com--123456-123456-1234-昵称不能为空]" time="5.522" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_nikename_err_enroll[1915856663@qq.com-123-123456-123456-1234-昵称格式不正确]" time="5.512" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_nikename_err_enroll[1915856663@qq.com-123456789112345678911-123456-123456-1234-昵称格式不正确]" time="5.550" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_pwd_err_example[1915856663@qq.com-1234--123456-1234-密码不能为空]" time="5.510" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_pwd_err_example[1915856663@qq.com-1234-12345-123456-1234-密码格式不正确]" time="5.557" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_repwd_err_example[1915856663@qq.com-liaoyudong-123456-1234567-1234-2次密码不相同]" time="5.523" /><testcase classname="test.test_web.test_enroll.TestEnroll" name="test_check_code_err_example[1915856663@qq.com-liaoyudong-123456-123456--验证码不能为空]" time="5.522" /><testcase classname="test.test_web.test_login.Test_Login" name="test_01_login[xiaoma@126.com-123456-登出]" time="7.465" /><testcase classname="test.test_web.test_login.Test_Login" name="test_02_login[xiaomazz@126.com-123456-用户名或密码错误]" time="7.468" /><testcase classname="test.test_web.test_login.Test_Login" name="test_02_login[-123456-请填写用户名和密码]" time="7.423" /><testcase classname="test.test_web.test_login.Test_Login" name="test_02_login[xiaoma@126.com--请填写用户名和密码]" time="7.420" /><testcase classname="test.test_web.test_login.Test_Login" name="test_02_login[xiaoma@126.com-12345678-用户名或密码错误]" time="7.480" /><testcase classname="test.test_web.test_to_login.Test_HomePage" name="test_to_login" time="5.333" /></testsuite></testsuites>
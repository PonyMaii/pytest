{
  "uid" : "c797c82db74e25c7",
  "name" : "test_case01_enroll[1915856663@qq.com-liaoyudong-123456-123456-1234-输入您收到邮件中的验证码：-欢迎加入当当网]",
  "fullName" : "test.test_web.test_enroll.TestEnroll#test_case01_enroll",
  "historyId" : "9802b6bf3e649b695503718d7ad74cb9",
  "time" : {
    "start" : 1669202564103,
    "stop" : 1669202582442,
    "duration" : 18339
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00771ED3+2236115]\n\tOrdinal0 [0x007092F1+1807089]\n\tOrdinal0 [0x006166FD+812797]\n\tOrdinal0 [0x006455DF+1005023]\n\tOrdinal0 [0x006457CB+1005515]\n\tOrdinal0 [0x00677632+1209906]\n\tOrdinal0 [0x00661AD4+1120980]\n\tOrdinal0 [0x006759E2+1202658]\n\tOrdinal0 [0x006618A6+1120422]\n\tOrdinal0 [0x0063A73D+960317]\n\tOrdinal0 [0x0063B71F+964383]\n\tGetHandleVerifier [0x00A1E7E2+2743074]\n\tGetHandleVerifier [0x00A108D4+2685972]\n\tGetHandleVerifier [0x00802BAA+532202]\n\tGetHandleVerifier [0x00801990+527568]\n\tOrdinal0 [0x0071080C+1837068]\n\tOrdinal0 [0x00714CD8+1854680]\n\tOrdinal0 [0x00714DC5+1854917]\n\tOrdinal0 [0x0071ED64+1895780]\n\tBaseThreadInitThunk [0x75FE6939+25]\n\tRtlGetFullPathName_UEx [0x77578FD2+1218]\n\tRtlGetFullPathName_UEx [0x77578F9D+1165]",
  "statusTrace" : "self = <test.test_web.test_enroll.TestEnroll object at 0x0000015C83D6A730>\nemail = '1915856663@qq.com', nikename = 'liaoyudong', pwd = 123456\nrepwd = 123456, check_code = 1234, expected1 = '输入您收到邮件中的验证码：'\nexpected2 = '欢迎加入当当网'\n\n    @pytest.mark.parametrize(\"email,nikename,pwd,repwd,check_code,expected1,expected2\",\n                             case_data['p_example'])\n    def test_case01_enroll(self, email, nikename, pwd, repwd,\n                           check_code, expected1, expected2):\n        logger.info([email, nikename, pwd, repwd, check_code, expected1, expected2])\n        self.home_proxy.to_enroll()\n        self.enrool_proxy.enroll_user(email, nikename, pwd, repwd, str(check_code)+\"\\n\")\n        time.sleep(2)\n        #点击注册按钮\n        self.enrool_proxy.click_enroll()\n        time.sleep(2)\n        self.enrool_proxy.click_enroll()\n        time.sleep(2)\n>       assert self.enrool_proxy.get_write_in() == expected1\n\ntest\\test_web\\test_enroll.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\enroll_page.py:126: in get_write_in\n    return self.enroll_handle.get_write_in_info()\npage\\enroll_page.py:85: in get_write_in_info\n    return self.get_text(self.enroll_page.find_write_in_info())\npage\\enroll_page.py:34: in find_write_in_info\n    return self.get_element(*self.write_in_info)\nbase\\web\\base.py:25: in get_element\n    element = wait.until(lambda x: x.find_element(*location))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a924c2ba38b052442c801b27fdf21708\")>\nmethod = <function BasePage.get_element.<locals>.<lambda> at 0x0000015C83DEC9D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00771ED3+2236115]\nE       \tOrdinal0 [0x007092F1+1807089]\nE       \tOrdinal0 [0x006166FD+812797]\nE       \tOrdinal0 [0x006455DF+1005023]\nE       \tOrdinal0 [0x006457CB+1005515]\nE       \tOrdinal0 [0x00677632+1209906]\nE       \tOrdinal0 [0x00661AD4+1120980]\nE       \tOrdinal0 [0x006759E2+1202658]\nE       \tOrdinal0 [0x006618A6+1120422]\nE       \tOrdinal0 [0x0063A73D+960317]\nE       \tOrdinal0 [0x0063B71F+964383]\nE       \tGetHandleVerifier [0x00A1E7E2+2743074]\nE       \tGetHandleVerifier [0x00A108D4+2685972]\nE       \tGetHandleVerifier [0x00802BAA+532202]\nE       \tGetHandleVerifier [0x00801990+527568]\nE       \tOrdinal0 [0x0071080C+1837068]\nE       \tOrdinal0 [0x00714CD8+1854680]\nE       \tOrdinal0 [0x00714DC5+1854917]\nE       \tOrdinal0 [0x0071ED64+1895780]\nE       \tBaseThreadInitThunk [0x75FE6939+25]\nE       \tRtlGetFullPathName_UEx [0x77578FD2+1218]\nE       \tRtlGetFullPathName_UEx [0x77578F9D+1165]\n\nC:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestEnroll",
    "time" : {
      "start" : 1669202562882,
      "stop" : 1669202564102,
      "duration" : 1220
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_xunit_setup_class_fixture_TestEnroll",
    "time" : {
      "start" : 1669202562882,
      "stop" : 1669202562882,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00771ED3+2236115]\n\tOrdinal0 [0x007092F1+1807089]\n\tOrdinal0 [0x006166FD+812797]\n\tOrdinal0 [0x006455DF+1005023]\n\tOrdinal0 [0x006457CB+1005515]\n\tOrdinal0 [0x00677632+1209906]\n\tOrdinal0 [0x00661AD4+1120980]\n\tOrdinal0 [0x006759E2+1202658]\n\tOrdinal0 [0x006618A6+1120422]\n\tOrdinal0 [0x0063A73D+960317]\n\tOrdinal0 [0x0063B71F+964383]\n\tGetHandleVerifier [0x00A1E7E2+2743074]\n\tGetHandleVerifier [0x00A108D4+2685972]\n\tGetHandleVerifier [0x00802BAA+532202]\n\tGetHandleVerifier [0x00801990+527568]\n\tOrdinal0 [0x0071080C+1837068]\n\tOrdinal0 [0x00714CD8+1854680]\n\tOrdinal0 [0x00714DC5+1854917]\n\tOrdinal0 [0x0071ED64+1895780]\n\tBaseThreadInitThunk [0x75FE6939+25]\n\tRtlGetFullPathName_UEx [0x77578FD2+1218]\n\tRtlGetFullPathName_UEx [0x77578F9D+1165]",
    "statusTrace" : "self = <test.test_web.test_enroll.TestEnroll object at 0x0000015C83D6A730>\nemail = '1915856663@qq.com', nikename = 'liaoyudong', pwd = 123456\nrepwd = 123456, check_code = 1234, expected1 = '输入您收到邮件中的验证码：'\nexpected2 = '欢迎加入当当网'\n\n    @pytest.mark.parametrize(\"email,nikename,pwd,repwd,check_code,expected1,expected2\",\n                             case_data['p_example'])\n    def test_case01_enroll(self, email, nikename, pwd, repwd,\n                           check_code, expected1, expected2):\n        logger.info([email, nikename, pwd, repwd, check_code, expected1, expected2])\n        self.home_proxy.to_enroll()\n        self.enrool_proxy.enroll_user(email, nikename, pwd, repwd, str(check_code)+\"\\n\")\n        time.sleep(2)\n        #点击注册按钮\n        self.enrool_proxy.click_enroll()\n        time.sleep(2)\n        self.enrool_proxy.click_enroll()\n        time.sleep(2)\n>       assert self.enrool_proxy.get_write_in() == expected1\n\ntest\\test_web\\test_enroll.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\enroll_page.py:126: in get_write_in\n    return self.enroll_handle.get_write_in_info()\npage\\enroll_page.py:85: in get_write_in_info\n    return self.get_text(self.enroll_page.find_write_in_info())\npage\\enroll_page.py:34: in find_write_in_info\n    return self.get_element(*self.write_in_info)\nbase\\web\\base.py:25: in get_element\n    element = wait.until(lambda x: x.find_element(*location))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a924c2ba38b052442c801b27fdf21708\")>\nmethod = <function BasePage.get_element.<locals>.<lambda> at 0x0000015C83DEC9D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00771ED3+2236115]\nE       \tOrdinal0 [0x007092F1+1807089]\nE       \tOrdinal0 [0x006166FD+812797]\nE       \tOrdinal0 [0x006455DF+1005023]\nE       \tOrdinal0 [0x006457CB+1005515]\nE       \tOrdinal0 [0x00677632+1209906]\nE       \tOrdinal0 [0x00661AD4+1120980]\nE       \tOrdinal0 [0x006759E2+1202658]\nE       \tOrdinal0 [0x006618A6+1120422]\nE       \tOrdinal0 [0x0063A73D+960317]\nE       \tOrdinal0 [0x0063B71F+964383]\nE       \tGetHandleVerifier [0x00A1E7E2+2743074]\nE       \tGetHandleVerifier [0x00A108D4+2685972]\nE       \tGetHandleVerifier [0x00802BAA+532202]\nE       \tGetHandleVerifier [0x00801990+527568]\nE       \tOrdinal0 [0x0071080C+1837068]\nE       \tOrdinal0 [0x00714CD8+1854680]\nE       \tOrdinal0 [0x00714DC5+1854917]\nE       \tOrdinal0 [0x0071ED64+1895780]\nE       \tBaseThreadInitThunk [0x75FE6939+25]\nE       \tRtlGetFullPathName_UEx [0x77578FD2+1218]\nE       \tRtlGetFullPathName_UEx [0x77578F9D+1165]\n\nC:\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a2d2ce7669410ee8",
      "name" : "stdout",
      "source" : "a2d2ce7669410ee8.txt",
      "type" : "text/plain",
      "size" : 200
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_xunit_setup_method_fixture_TestEnroll::0",
    "time" : {
      "start" : 1669202582531,
      "stop" : 1669202584569,
      "duration" : 2038
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_xunit_setup_class_fixture_TestEnroll::0",
    "time" : {
      "start" : 1669202645378,
      "stop" : 1669202645383,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "user('小马')"
  }, {
    "name" : "parentSuite",
    "value" : "test.test_web"
  }, {
    "name" : "suite",
    "value" : "test_enroll"
  }, {
    "name" : "subSuite",
    "value" : "TestEnroll"
  }, {
    "name" : "host",
    "value" : "xiaoma"
  }, {
    "name" : "thread",
    "value" : "19648-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_web.test_enroll"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "check_code",
    "value" : "1234"
  }, {
    "name" : "email",
    "value" : "'1915856663@qq.com'"
  }, {
    "name" : "expected1",
    "value" : "'输入您收到邮件中的验证码：'"
  }, {
    "name" : "expected2",
    "value" : "'欢迎加入当当网'"
  }, {
    "name" : "nikename",
    "value" : "'liaoyudong'"
  }, {
    "name" : "pwd",
    "value" : "123456"
  }, {
    "name" : "repwd",
    "value" : "123456"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "user('小马')" ]
  },
  "source" : "c797c82db74e25c7.json",
  "parameterValues" : [ "1234", "'1915856663@qq.com'", "'输入您收到邮件中的验证码：'", "'欢迎加入当当网'", "'liaoyudong'", "123456", "123456" ]
}